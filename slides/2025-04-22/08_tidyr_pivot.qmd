---
topic: "Reshaping Tidy Data"
---

```{r}
#| echo: false
#| warning: false
#| message: false
library(tidyverse)
library(palmerpenguins)
```

# {{< meta topic >}}

## Where are We?

::: {style="font-size: 85%;"}
- `R` Basics
- Data Visualization
- `R` Programming
- [Tidy Data Manipulation]{color="blue"}
  - Selecting Rows and Columns
  - Computing Groupwise Summaries
  - Joining Tables
  - [Reshaping Tables]{color="blue"}
- `python` Basics
- Web Scraping with `python`

:::


## Goals for this Video

In this video: 

::: incremental

- Identify wide and long format data
- Pivot data from wide to long format
- Pivot data from long to wide format

:::

## Tidy Data

Recall our Baruch enrollment example of tidy data ✅ 

```{r}
#| echo: false
#| message: false
#| warning: false
library(tidyverse)
D <- tribble(
    ~Semester, ~Course,      ~Enrollment, ~Cap,
       "Fall", "Accounting",         200,  250,
       "Fall", "Law",                100,  125,
       "Fall", "Statistics",         200,  200,
     "Spring", "Accounting",         300,  350,
     "Spring", "Law",                50,   100,
     "Spring", "Statistics",         400,  400
)
```

```{r}
#| echo: false
print(D)
```

## Tidy Data

We can plot this 

```{r}
#| echo: true
ggplot(D, aes(x=Semester, y=Enrollment, color=Course)) +
    geom_jitter() + theme_bw()
```


## Tidy Data

Not easy to plot both `Enrollment` and `Cap` columns

. . . 

Need data in this "untidy" format


```{r}
#| echo: false
D2 <- tribble(
    ~Semester, ~Course,      ~Number, ~Type,
       "Fall", "Accounting",     200, "Enrollment",
       "Fall", "Accounting",     250, "Cap",
       "Fall", "Law",        100, "Enrollment",
       "Fall", "Law",        125, "Cap",
       "Fall", "Statistics", 200, "Enrollment",
       "Fall", "Statistics", 200, "Cap",
       "Spring", "Accounting",     300, "Enrollment",
       "Spring", "Accounting",     350, "Cap",
       "Spring", "Law",        50, "Enrollment",
       "Spring", "Law",        100, "Cap",
       "Spring", "Statistics", 400, "Enrollment",
       "Spring", "Statistics", 400, "Cap"
)
print(D2)
```

## Tidy Data

```{r}
#| echo: true
ggplot(D2, aes(x=Semester, y=Number, shape=Type, color=Course)) +
    geom_jitter() + theme_bw() + theme(legend.position = "bottom")
```

## Wide and Long Data

We switched from a "wide" format to a "long" format

- Not absolute terms, relative to each other
- Wide has more columns (tidier), long is easier for certain plots

## Pivots

`pivot` operations can be used to switch between formats

- `pivot_longer` combine columns 
- `pivot_wider` split a column 

Syntax is hard to remember - use `?pivot_wider` and `?pivot_longer` for examples

## Wide to Long

```{r}
#| eval: false
pivot_longer(D, 
             cols=c(Enrollment, Cap), 
             names_to="Type",  # Quote since not a current column
             values_to="Number")
```

```{r}
#| echo: false
pivot_longer(D, 
             cols=c(Enrollment, Cap), 
             names_to="Type",  # Quote since not a current column
             values_to="Number") |>
    print(n=3)
```

- `cols` to pivot
- `names_to`: column where to put (old) column name
- `values_to`: column where to store old values

## Long to Wide

```{r}
pivot_wider(D2, 
            id_cols = c(Semester, Course), 
            values_from = Number, 
            names_from = Type)
```

- `id_cols`: columns kept in place
- `names_from`: column where to get new column names
- `values_from`: column where to get values

## Looking Ahead

- Apply Grouped Operations ✅ 
- Summarize Across Multiple Rows ✅ 
- Join Multiple Tables ✅ 
- Reshape Tables with `pivot` Operations ✅ 

. . . 

Now it's your turn!

## Learning More

For more, check out 
[Chapter 5 - "Tidying"](https://r4ds.hadley.nz/data-tidy.html) 
of *`R` for Data Science*

