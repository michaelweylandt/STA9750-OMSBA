{
  "hash": "5f26c4d74ff8f39edc2af3c9787ef3f6",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"STA 9750 </br> Tidy Data\"\nauthor: \"Michael Weylandt </br> Baruch College\"\nformat:\n  revealjs: \n    theme: [default, styles.scss]\n    title-slide-attributes:\n      data-background-image: none\ninclude-in-header:\n  - text: |\n      <style>\n      #title-slide .title {\n        font-size: 4.5em;\n        color: #b22222;\n      }\n      section .level2 {\n        data-background-image: \"baruch_background.png\";\n      }\n      .slide h2 {\n        color: #FFFFFF;\n        font-size: 2em;\n      }\n      </style>\n---\n\n\n\n## Tester\n\n## Introduction {background-image=\"baruch_background.png\"}\n\nIn this video: \n\n::: incremental\n\n- Introduce the concept of Tidy Data\n- Identify Key Aspects of Tidy Data\n- Learn to Diagnose Non-Tidy Data\n\n:::\n. . . \n\nLater: \n\n- Manipulation of Tidy Data\n\n. . . \n\nBut first - review!\n\n# Review\n\n## Data Frames\n\n`data.frame` - `R`'s _tabular_ data storage\n\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\n  Sepal.Length Sepal.Width Petal.Length Petal.Width Species\n1          5.1         3.5          1.4         0.2  setosa\n2          4.9         3.0          1.4         0.2  setosa\n3          4.7         3.2          1.3         0.2  setosa\n```\n\n\n:::\n:::\n\n\n\n## Data Frames\n\nKey features: \n\n::: incremental\n\n- Tabular (rows and columns) structure\n- Entries in the same column are all of the same type\n- Columns may be different types\n\n::: \n\n## Data Frames\n\nCan be manipulated using standard `R` syntax: \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntable(iris[iris$Petal.Length > 5,\"Species\"])\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n    setosa versicolor  virginica \n         0          1         41 \n```\n\n\n:::\n:::\n\n\n\n::: incremental \n\n- `$` extracts a column as a vector\n- `name[row index, column index]`\n  - Logical row indexing to select rows where Petal Length > 5\n  - Column indexing by name to select a single column\n  \n:::\n\n# Tidy Data\n\n## What is Tidy Data?\n\n\"Tidy Data\": Organizational principles to make data manipulation easy and safe\n\n. . . \n\n\"Best practices\" \n\nTidy data will *decrease chance of errors* and *increase productivity*\n\n. . . \n\nWhat does it mean to be tidy? \n\n::: incremental\n\n- **Everything in its proper place**\n\n::: \n\n## Tidy Data\n\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\n  species bill_length_mm flipper_length_mm body_mass_g    sex\n1  Adelie           39.1               181        3750   male\n2  Adelie           39.5               186        3800 female\n3  Adelie           40.3               195        3250 female\n```\n\n\n:::\n:::\n\n\n\n. . . \n\nKey features: \n\n::: incremental\n\n- Each row is one observation (🐧)\n- Each column has _one and only one_ fact\n- All values are in the table - not hiding in row and column names\n\n:::\n\n## Tidy Data\n\n![](https://r4ds.had.co.nz/images/tidy-1.png)\n\n> Figure from *`R` for Data Science* by H. Wickham\n\n## Tidy Data - Why? \n\nWhy emphasize tidy data? \n\n. . . \n\nMinimize distractions: \n\n- Free to focus on _analysis_ not _code_ \n\n. . . \n\nOnce data is \"tidy\", you can focus on the real questions\n\n\"Tidying up\" - goal of pre-processing \n\n## Tidy Data - Who (and When)?\n\nThe name and principles of \"tidy data\" were popularized by H. Wickham (2014)\n\n. . . \n\nCore ideas are much older, dating back to (at least) Codd's *Relational Model*\nin the 1970s, now ubiquitous in relational databases\n\n. . . \n\nNow found in Python (`pandas`), Julia (`DataFrames`), Rust (`polars`) and more\n\n## Tidy Data - How (and Where)?\n\n`tidyverse` - Packages for Manipulating Tidy Data: \n\n::: incremental\n\n- `ggplot2`: Visualization\n- `dplyr`: `SQL`-like operations\n- `tidyr`: Reshaping and cleaning data\n- `readr`: Ingest tidy data into `R`\n- `stringr`, `forcats`, `lubridate`: Tidy manipulation of different data types\n- `tidymodels`: Tidy manipulation of statistical models\n\n:::\n\n. . . \n\nMore helpers in the background (`tibble`, `vctrs`, ...)\n\n## Some Untidy Examples\n\nBaruch college business core enrollment:\n\n\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 × 4\n  Semester Course     Enrollment   Cap\n  <chr>    <chr>           <dbl> <dbl>\n1 Fall     Accounting        200   250\n2 Fall     Law               100   125\n3 Fall     Statistics        200   200\n4 Spring   Accounting        300   350\n5 Spring   Law                50   100\n6 Spring   Statistics        400   400\n```\n\n\n:::\n:::\n\n\n\n## Some Untidy Examples\n\nMultiple pieces of information in a single cell:\n\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 × 3\n  Semester Course     Enrollment  \n  <chr>    <chr>      <chr>       \n1 Fall     Accounting \"200 of 250\"\n2 Fall     Law        \"100 of 125\"\n3 Fall     Statistics \"200 of 200\"\n4 Spring   Accounting \"300 of 350\"\n5 Spring   Law        \" 50 of 100\"\n6 Spring   Statistics \"400 of 400\"\n```\n\n\n:::\n:::\n\n\n\n\n## Some Untidy Examples\n\nMixing distinct facts in a single column:\n\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 12 × 4\n   Semester Course     Number Type      \n   <chr>    <chr>       <dbl> <chr>     \n 1 Fall     Accounting    200 Enrollment\n 2 Fall     Accounting    250 Cap       \n 3 Fall     Law           100 Enrollment\n 4 Fall     Law           125 Cap       \n 5 Fall     Statistics    200 Enrollment\n 6 Fall     Statistics    200 Cap       \n 7 Spring   Accounting    300 Enrollment\n 8 Spring   Accounting    350 Cap       \n 9 Spring   Law            50 Enrollment\n10 Spring   Law           100 Cap       \n11 Spring   Statistics    400 Enrollment\n12 Spring   Statistics    400 Cap       \n```\n\n\n:::\n:::\n\n\n\n## Some Untidy Examples\n\nSpread across two tables:\n\n\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 × 3\n  Semester Course     Enrollment\n  <chr>    <chr>           <dbl>\n1 Fall     Accounting        200\n2 Fall     Law               100\n3 Fall     Statistics        200\n# ℹ 3 more rows\n```\n\n\n:::\n:::\n\n\n\nand \n\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 × 3\n  Semester Course       Cap\n  <chr>    <chr>      <dbl>\n1 Fall     Accounting   250\n2 Fall     Law          125\n3 Fall     Statistics   200\n# ℹ 3 more rows\n```\n\n\n:::\n:::\n\n\n\n\n# Looking Ahead\n\n## Looking Ahead\n\nFor now, we'll provide you with *tidy* data\n\n. . . \n\nUpcoming topics: \n\n::: incremental \n\n- Visualizing Tidy Data (Week 3)\n- Statistical Models of Tidy Data (Week 4)\n- Manipulating Tidy Data (Week 5)\n- Taking Untidy Web Data and Making it Tidy (Week 7)\n\n::: \n\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}