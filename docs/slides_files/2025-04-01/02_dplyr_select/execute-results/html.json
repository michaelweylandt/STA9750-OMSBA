{
  "hash": "a564bd27f747cf16666bacbfd8e6634c",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntopic: \"Tidy Column Selection\"\n---\n\n\n\n# {{< meta topic >}}\n\n## Where are We?\n\n::: {style=\"font-size: 85%;\"}\n- `R` Basics\n- Data Visualization\n- `R` Programming\n- [Tidy Data Manipulation]{color=\"blue\"}\n  - [Selecting Rows and Columns]{color=\"blue\"}\n  - Computing Groupwise Summaries\n  - Joining Tables\n  - Reshaping Tables\n- `python` Basics\n- Web Scraping with `python`\n\n:::\n\n## Goals for this Video\n\nIn this video: \n\n::: incremental\n\n- Introduce the `dplyr` package and the pipe operator (`|>`)\n- `select` and `rename` columns in a tidy way\n- Use advanced selectors for _groups_ of columns\n\n:::\n\n## Tidy Data\n\nRecall our definition of \"tidy\" data - everything in its proper place: \n\n::: incremental\n- One and only one type of information per column\n- One and only one observation per row\n- No values 'hiding' in column or row names\n:::\n\n. . . \n\nReturn of the `palmerpenguins`:\n\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 344 × 3\n  species island    bill_length_mm\n  <fct>   <fct>              <dbl>\n1 Adelie  Torgersen           39.1\n2 Adelie  Torgersen           39.5\n# ℹ 342 more rows\n```\n\n\n:::\n:::\n\n\n\n## Tidy Tools for Tidy Data\n\n`tidyverse` - Tools for manipulating tidy data\n\n. . . \n\nMake sure to load the `tidyverse` package before using\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.2     ✔ tibble    3.2.1\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.0.4     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n\n\n:::\n:::\n\n\n\nSafe to ignore messages about conflicts\n\n## tidyverse Packages\n\n![](https://tidyverse.tidyverse.org/logo.png){fig-align=\"center\" width=\"10%\"}\n\n`tidyverse` tools have _excellent_ documentation\n\n- Visit `tidyverse.org` for overall information\n- Individual packages: `ggplot2.tidyverse.org`, `dplyr.tidyverse.org`, *etc.*\n\n. . . \n\n- Function Reference - Details of specific functions\n- Vignettes / Articles - Big picture tutorials\n\n\n![](https://tidyverse.tidyverse.org/logo.png){width=\"0%\"}\n\n\n## dplyr\n\nYou have already seen one `tidyverse` package: `ggplot2`\n\n. . . \n\nToday we start with `dplyr` - 'grammar of data manipulation'\n\n![](https://dplyr.tidyverse.org/logo.png){fig-align=\"center\"}\n\n\n## select\n\nThe `select` function can be used to select certain columns\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nselect(penguins, species, bill_length_mm, body_mass_g, sex)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 344 × 4\n   species bill_length_mm body_mass_g sex   \n   <fct>            <dbl>       <int> <fct> \n 1 Adelie            39.1        3750 male  \n 2 Adelie            39.5        3800 female\n 3 Adelie            40.3        3250 female\n 4 Adelie            NA            NA <NA>  \n 5 Adelie            36.7        3450 female\n 6 Adelie            39.3        3650 male  \n 7 Adelie            38.9        3625 female\n 8 Adelie            39.2        4675 male  \n 9 Adelie            34.1        3475 <NA>  \n10 Adelie            42          4250 <NA>  \n# ℹ 334 more rows\n```\n\n\n:::\n:::\n\n\n\n. . . \n\nArguments: data => columns we want\n\n## select\n\nContrast\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nselect(penguins, species, bill_length_mm, body_mass_g, sex)\n```\n:::\n\n\n\nwith\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npenguins[,c(\"species\", \"bill_length_mm\", \"body_mass_g\", \"sex\")]\n```\n:::\n\n\n\n. . . \n\n</br>\n\nKey differences:\n\n- No quotes around column names\n- Pass names as arguments, not 1 vector\n\n## Put that in your Pipe\n\n`R` supports _piped_ operations - feeding the output of one function into another\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nselect(penguins, species, bill_length_mm, body_mass_g, sex)\n```\n:::\n\n\n\nis equivalent to \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npenguins |> select(species, bill_length_mm, body_mass_g, sex)\n```\n:::\n\n\n\n. . . \n\nRead `|>` as \"and then\"\n\n`dplyr` plays _very nicely_ with pipes\n\n## select\n\nLike vector indexing, negative sign _drops_ columns: \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npenguins |> select(-species)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 344 × 7\n   island bill_length_mm bill_depth_mm flipper_length_mm body_mass_g sex    year\n   <fct>           <dbl>         <dbl>             <int>       <int> <fct> <int>\n 1 Torge…           39.1          18.7               181        3750 male   2007\n 2 Torge…           39.5          17.4               186        3800 fema…  2007\n 3 Torge…           40.3          18                 195        3250 fema…  2007\n 4 Torge…           NA            NA                  NA          NA <NA>   2007\n 5 Torge…           36.7          19.3               193        3450 fema…  2007\n 6 Torge…           39.3          20.6               190        3650 male   2007\n 7 Torge…           38.9          17.8               181        3625 fema…  2007\n 8 Torge…           39.2          19.6               195        4675 male   2007\n 9 Torge…           34.1          18.1               193        3475 <NA>   2007\n10 Torge…           42            20.2               190        4250 <NA>   2007\n# ℹ 334 more rows\n```\n\n\n:::\n:::\n\n\n\n## select\n\n`:` operator selects a _range_ of columns\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npenguins |> select(bill_length_mm:body_mass_g)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 344 × 4\n   bill_length_mm bill_depth_mm flipper_length_mm body_mass_g\n            <dbl>         <dbl>             <int>       <int>\n 1           39.1          18.7               181        3750\n 2           39.5          17.4               186        3800\n 3           40.3          18                 195        3250\n 4           NA            NA                  NA          NA\n 5           36.7          19.3               193        3450\n 6           39.3          20.6               190        3650\n 7           38.9          17.8               181        3625\n 8           39.2          19.6               195        4675\n 9           34.1          18.1               193        3475\n10           42            20.2               190        4250\n# ℹ 334 more rows\n```\n\n\n:::\n:::\n\n\n\nYou can also use `c` here\n\n## select\n\n`select` also supports several \"smart\" helpers to pick columns\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npenguins |> select(contains(\"bill\"))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 344 × 2\n   bill_length_mm bill_depth_mm\n            <dbl>         <dbl>\n 1           39.1          18.7\n 2           39.5          17.4\n 3           40.3          18  \n 4           NA            NA  \n 5           36.7          19.3\n 6           39.3          20.6\n 7           38.9          17.8\n 8           39.2          19.6\n 9           34.1          18.1\n10           42            20.2\n# ℹ 334 more rows\n```\n\n\n:::\n:::\n\n\n\n## select\n\nSee `?dplyr_tidy_select` for more helpers\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npenguins |> select(ends_with(\"mm\"))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 344 × 3\n   bill_length_mm bill_depth_mm flipper_length_mm\n            <dbl>         <dbl>             <int>\n 1           39.1          18.7               181\n 2           39.5          17.4               186\n 3           40.3          18                 195\n 4           NA            NA                  NA\n 5           36.7          19.3               193\n 6           39.3          20.6               190\n 7           38.9          17.8               181\n 8           39.2          19.6               195\n 9           34.1          18.1               193\n10           42            20.2               190\n# ℹ 334 more rows\n```\n\n\n:::\n:::\n\n\n\n## select\n\nHelpers can be combined using `&` (intersection) and `|` (union) operations:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npenguins |> select(contains(\"bill\") | ends_with(\"g\"))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 344 × 3\n   bill_length_mm bill_depth_mm body_mass_g\n            <dbl>         <dbl>       <int>\n 1           39.1          18.7        3750\n 2           39.5          17.4        3800\n 3           40.3          18          3250\n 4           NA            NA            NA\n 5           36.7          19.3        3450\n 6           39.3          20.6        3650\n 7           38.9          17.8        3625\n 8           39.2          19.6        4675\n 9           34.1          18.1        3475\n10           42            20.2        4250\n# ℹ 334 more rows\n```\n\n\n:::\n:::\n\n\n\n## select \n\n_Predicate_ operator can select columns based on properties of values\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npenguins |> select(where(is.numeric))\n```\n:::\n\n\n\n. . . \n\nAlso: `is.character` and `is.factor`\n\n. . . \n\nCan be extended to more complex checks:\n\n- Pass a custom _function_ \n- (Not covered here; see docs for examples)\n\n## select \n\n`where` combines nicely with other selectors:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npenguins |> select(where(is.numeric) & ends_with(\"mm\"))\n```\n:::\n\n\n\n## rename\n\nUse `rename` to change column names:\n\n\n::: {.cell}\n\n```{.r .cell-code}\npenguins |> \n    select(where(is.numeric) & ends_with(\"mm\")) |>\n    rename(`Bill Length (mm)`=bill_length_mm, \n           `Bill Depth (mm)`=bill_depth_mm,\n           `Flipper Length (mm)`=flipper_length_mm)\n```\n:::\n\n::: {.cell}\n::: {.cell-output-display}\n`````{=html}\n<table class=\" lightable-classic table\" style='font-family: \"Arial Narrow\", \"Source Sans Pro\", sans-serif; width: auto !important; margin-left: auto; margin-right: auto; font-size: 20px; margin-left: auto; margin-right: auto;'>\n <thead>\n  <tr>\n   <th style=\"text-align:right;\"> Bill Length (mm) </th>\n   <th style=\"text-align:right;\"> Bill Depth (mm) </th>\n   <th style=\"text-align:right;\"> Flipper Length (mm) </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:right;\"> 39.1 </td>\n   <td style=\"text-align:right;\"> 18.7 </td>\n   <td style=\"text-align:right;\"> 181 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 39.5 </td>\n   <td style=\"text-align:right;\"> 17.4 </td>\n   <td style=\"text-align:right;\"> 186 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 40.3 </td>\n   <td style=\"text-align:right;\"> 18.0 </td>\n   <td style=\"text-align:right;\"> 195 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> NA </td>\n   <td style=\"text-align:right;\"> NA </td>\n   <td style=\"text-align:right;\"> NA </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 36.7 </td>\n   <td style=\"text-align:right;\"> 19.3 </td>\n   <td style=\"text-align:right;\"> 193 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 39.3 </td>\n   <td style=\"text-align:right;\"> 20.6 </td>\n   <td style=\"text-align:right;\"> 190 </td>\n  </tr>\n</tbody>\n</table>\n\n`````\n:::\n:::\n\n\n\nParticularly useful for formatting output\n\n## rename\n\n`rename` tips: \n\n::: incremental\n\n- Use backticks (`) to surround 'non-syntactic' names\n- Useful to make names useful `R` variables pre-analysis\n- Useful to make names proper English post-analysis\n\n:::\n\n## Looking Ahead\n\n- Selecting Columns ✅ \n- Selecting Rows\n- Transforming Columns\n\n## Learning More\n\nFor more, check out \n[Chapter 3 - \"Data Transformation\"](https://r4ds.hadley.nz/data-transform#sec-select) of *`R` for Data Science*\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<script src=\"../../site_libs/kePrint-0.0.1/kePrint.js\"></script>\n<link href=\"../../site_libs/lightable-0.0.1/lightable.css\" rel=\"stylesheet\" />\n"
      ],
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}