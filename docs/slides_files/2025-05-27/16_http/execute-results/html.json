{
  "hash": "381e32852a57df78a2687184f59e0ede",
  "result": {
    "engine": "jupyter",
    "markdown": "---\ntopic: \"HTTP: Requesting and Receiving Internet Content\"\ntitle: \"</br></br></br></br></br>Software Tools for Data Analysis</br>STA 9750</br>Michael Weylandt\"\n---\n\n\n# {{< meta topic >}}\n\n## Where are We?\n\n::: {style=\"font-size: 75%;\"}\n- `R` Basics\n- Data Visualization\n- `R` Programming\n- Tidy Data Manipulation\n- `python` Basics\n- Web Scraping with `python`\n  - [Basics of HTTP]{color=\"blue\"}\n  - [Making HTTP Requests with `Python`]{color=\"blue\"}\n  - Structure of HTML\n  - Parsing HTML with `Python`\n  - String Manipulation in `Python`\n\n:::\n\n\n## Goals for this Video\n\nIn this video: \n\n::: {.incremental}\n\n- What is `http`?\n- `http` requests with `requests`\n\n:::\n\n## Web Protocols\n\nData are transfered over the internet using _protocols_: standards for\n\n- What a message looks like\n- How the destination is specified\n- What content a message contains\n\nand more\n\nProtocols give structure ('common language') to bytes: 'file format' for the internet\n\n## Web Protocols\n\nPopular protocols: \n\n- `sms`/`mms` (text messages)\n- `smtp` (email)\n- `ftp` (sending big files)\n- `http`: HyperText Transfer Protocol\n\n. . . \n\n`http` is the big one: it defines the _web_ and associated concepts (pages, sites, refresh, *etc*)\n\n## HTTP\n\n`http`: HyperText Transmission Protocol\n\n::: {.incremental}\n\n- Client-Server\n- Request-Response\n- (Essentially) Stateless\n- Methods\n- Status Codes\n- Headers\n- Body\n\n:::\n\n## URL\n\nYour computer (\"client\") makes a _request_ to another computer (\"server\")\n\n. . . \n\nURL (or URI) - Uniform Resource Locator (Identifier)\n\n- Server\n- Location on Server \n\n. . . \n\n![](https://abstrax.io/wp-content/uploads/2022/07/parts-of-url-1024x335.png)\n\n\n## URL\n\nExample: I go to `www.baruch.cuny.edu/index.html`\n\n::: {.incremental}\n\n1. First my computer makes a request to `edu`: directions to `edu.cuny`\n2. Next, ask `edu.cuny` for `edu.cuny.baruch`\n3. Next, ask `edu.cuny.baruch` for `edu.cuny.baruch.www` (often same server)\n4. Finally, ask `edu.cuny.baruch.www` for the file `index.html`\n\n:::\n\n. . . \n\nBehind the scenes, 'caching' used to speed this up\n\n## HTTP Verbs\n\nHTTP requests come with several verbs: \n\n- `GET`\n- `POST`\n- `HEAD`\n- `DELETE`\n- . . . \n\n## HTTP Verbs\n\n`GET` and `POST` are the most important HTTP Verbs: \n\n- Ask for a page (`GET`)\n- Submit values to a server (`POST`) - *e.g.*, forms, logins\n\n. . . \n\n99% of time, `GET` page\n\n- Typical to embed details in URL: \n\n> `https://www.google.com/search?q=baruch`\n\n## HTTP Response\n\nServer replies with a _response_ \n\n- Status Code\n- Headers + Body\n\n. . . \n\nStatus code characterizes what happened: \n\n::: {style=\"font-size: 75%;\"}\n::: {.incremental}\n\n- `200 OK`\n- `404 NOT FOUND`\n- `401`, `403` (Unauthorized)\n- `301`, `307`, `308` (Various redirects)\n- `500` (Internal error)\n\n:::\n:::\n\n## HTTP Response\n\nIf `200`: \n\n- Headers: a `dict` of side information (cookies, last updated, *etc*)\n- Body: actual requested content\n\n## requests\n\n`requests` is a Python library for making HTTP requests\n\n::: {#8b2270ac .cell execution_count=1}\n``` {.python .cell-code}\nimport requests as r\nresp = r.get(\"https://michael-weylandt.com/index.html\")\nresp\n```\n\n::: {.cell-output .cell-output-display execution_count=1}\n```\n<Response [200]>\n```\n:::\n:::\n\n\n## requests\n\n::: {#e068e609 .cell execution_count=2}\n``` {.python .cell-code}\nresp.status_code\n```\n\n::: {.cell-output .cell-output-display execution_count=2}\n```\n200\n```\n:::\n:::\n\n\nor \n\n::: {#3247515a .cell execution_count=3}\n``` {.python .cell-code}\nresp.ok\n```\n\n::: {.cell-output .cell-output-display execution_count=3}\n```\nTrue\n```\n:::\n:::\n\n\n. . . \n\nExamine headers:\n\n::: {#08877201 .cell execution_count=4}\n``` {.python .cell-code}\nresp.headers[\"Last-Modified\"]\n```\n\n::: {.cell-output .cell-output-display execution_count=4}\n```\n'Wed, 21 May 2025 19:02:07 GMT'\n```\n:::\n:::\n\n\n## requests\n\nBulk of response is `text`: \n\n::: {#0e6da1c1 .cell execution_count=5}\n``` {.python .cell-code}\nresp.headers[\"Content-Type\"]\n```\n\n::: {.cell-output .cell-output-display execution_count=5}\n```\n'text/html; charset=utf-8'\n```\n:::\n:::\n\n\nDefault HTML but other text possible (*e.g.*, CSV, JSON)\n\n. . . \n\nAccess via `.text`:\n\n::: {#b47bfd2f .cell execution_count=6}\n``` {.python .cell-code}\nresp.text\n```\n\n::: {.cell-output .cell-output-display execution_count=6}\n```\n'<!DOCTYPE html>\\n<html xmlns=\"http://www.w3.org/1999/xhtml\" lang=\"en\" xml:lang=\"en\"><head>\\n\\n<meta charset=\"utf-8\">\\n<meta name=\"generator\" content=\"quarto-1.6.40\">\\n\\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=yes\">\\n\\n\\n<title>Welcome! â€“ Michael Weylandt</title>\\n<style>\\ncode{white-space: pre-wrap;}\\nspan.smallcaps{font-variant: small-caps;}\\ndiv.columns{display: flex; gap: min(4vw, 1.5em);}\\ndiv.column{flex: auto; overflow-x: auto;}\\ndiv.hanging-indent{margin-left: 1.5em; text-indent: -1.5em;}\\nul.task-list{list-style: none;}\\nul.task-list li input[type=\"checkbox\"] {\\n  width: 0.8em;\\n  margin: 0 0.8em 0.2em -1em; /* quarto-specific, see https://github.com/quarto-dev/quarto-cli/issues/4556 */ \\n  vertical-align: middle;\\n}\\n</style>\\n\\n\\n<script src=\"site_libs/quarto-nav/quarto-nav.js\"></script>\\n<script src=\"site_libs/quarto-nav/headroom.min.js\"></script>\\n<script src=\"site_libs/clipboard/clipboard.min.js\"></script>\\n<script src=\"site_libs/quarto-search/autocomplete.umd.js\"></script>\\n<script src=\"site_libs/quarto-search/fuse.min.js\"></script>\\n<script src=\"site_libs/quarto-search/quarto-search.js\"></script>\\n<meta name=\"quarto:offset\" content=\"./\">\\n<script src=\"site_libs/quarto-html/quarto.js\"></script>\\n<script src=\"site_libs/quarto-html/popper.min.js\"></script>\\n<script src=\"site_libs/quarto-html/tippy.umd.min.js\"></script>\\n<script src=\"site_libs/quarto-html/anchor.min.js\"></script>\\n<link href=\"site_libs/quarto-html/tippy.css\" rel=\"stylesheet\">\\n<link href=\"site_libs/quarto-html/quarto-syntax-highlighting-dark-8ea72dc5fed832574809a9c94082fbbb.css\" rel=\"stylesheet\" id=\"quarto-text-highlighting-styles\">\\n<script src=\"site_libs/bootstrap/bootstrap.min.js\"></script>\\n<link href=\"site_libs/bootstrap/bootstrap-icons.css\" rel=\"stylesheet\">\\n<link href=\"site_libs/bootstrap/bootstrap-e02ed2057a4ba0986bafc016a17ae4fe.min.css\" rel=\"stylesheet\" append-hash=\"true\" id=\"quarto-bootstrap\" data-mode=\"dark\">\\n<script id=\"quarto-search-options\" type=\"application/json\">{\\n  \"location\": \"navbar\",\\n  \"copy-button\": false,\\n  \"collapse-after\": 3,\\n  \"panel-placement\": \"end\",\\n  \"type\": \"overlay\",\\n  \"limit\": 50,\\n  \"keyboard-shortcut\": [\\n    \"f\",\\n    \"/\",\\n    \"s\"\\n  ],\\n  \"show-item-context\": false,\\n  \"language\": {\\n    \"search-no-results-text\": \"No results\",\\n    \"search-matching-documents-text\": \"matching documents\",\\n    \"search-copy-link-title\": \"Copy link to search\",\\n    \"search-hide-matches-text\": \"Hide additional matches\",\\n    \"search-more-match-text\": \"more match in this document\",\\n    \"search-more-matches-text\": \"more matches in this document\",\\n    \"search-clear-button-title\": \"Clear\",\\n    \"search-text-placeholder\": \"\",\\n    \"search-detached-cancel-button-title\": \"Cancel\",\\n    \"search-submit-button-title\": \"Submit\",\\n    \"search-label\": \"Search\"\\n  }\\n}</script>\\n\\n\\n</head>\\n\\n<body class=\"nav-fixed fullcontent\">\\n\\n<div id=\"quarto-search-results\"></div>\\n  <header id=\"quarto-header\" class=\"headroom fixed-top\">\\n    <nav class=\"navbar navbar-expand-lg \" data-bs-theme=\"dark\">\\n      <div class=\"navbar-container container-fluid\">\\n      <div class=\"navbar-brand-container mx-auto\">\\n    <a class=\"navbar-brand\" href=\"./index.html\">\\n    <span class=\"navbar-title\">Michael Weylandt</span>\\n    </a>\\n  </div>\\n            <div id=\"quarto-search\" class=\"\" title=\"Search\"></div>\\n          <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarCollapse\" aria-controls=\"navbarCollapse\" role=\"menu\" aria-expanded=\"false\" aria-label=\"Toggle navigation\" onclick=\"if (window.quartoToggleHeadroom) { window.quartoToggleHeadroom(); }\">\\n  <span class=\"navbar-toggler-icon\"></span>\\n</button>\\n          <div class=\"collapse navbar-collapse\" id=\"navbarCollapse\">\\n            <ul class=\"navbar-nav navbar-nav-scroll ms-auto\">\\n  <li class=\"nav-item\">\\n    <a class=\"nav-link\" href=\"././index.html\"> \\n<span class=\"menu-text\">Home</span></a>\\n  </li>  \\n  <li class=\"nav-item\">\\n    <a class=\"nav-link\" href=\"././research.html\"> \\n<span class=\"menu-text\">Research</span></a>\\n  </li>  \\n  <li class=\"nav-item\">\\n    <a class=\"nav-link\" href=\"././publications.html\"> \\n<span class=\"menu-text\">Publications</span></a>\\n  </li>  \\n  <li class=\"nav-item\">\\n    <a class=\"nav-link\" href=\"././teaching.html\"> \\n<span class=\"menu-text\">Teaching</span></a>\\n  </li>  \\n  <li class=\"nav-item\">\\n    <a class=\"nav-link\" href=\"././software.html\"> \\n<span class=\"menu-text\">Software</span></a>\\n  </li>  \\n  <li class=\"nav-item\">\\n    <a class=\"nav-link\" href=\"././about.html\"> \\n<span class=\"menu-text\">About</span></a>\\n  </li>  \\n  <li class=\"nav-item\">\\n    <a class=\"nav-link\" href=\"././contact.html\"> \\n<span class=\"menu-text\">Contact</span></a>\\n  </li>  \\n</ul>\\n          </div> <!-- /navcollapse -->\\n            <div class=\"quarto-navbar-tools\">\\n</div>\\n      </div> <!-- /container-fluid -->\\n    </nav>\\n</header>\\n<!-- content -->\\n<div id=\"quarto-content\" class=\"quarto-container page-columns page-rows-contents page-layout-article page-navbar\">\\n<!-- sidebar -->\\n<!-- margin-sidebar -->\\n    \\n<!-- main -->\\n<main class=\"content\" id=\"quarto-document-content\">\\n\\n<header id=\"title-block-header\" class=\"quarto-title-block default\">\\n<div class=\"quarto-title\">\\n<h1 class=\"title\">Welcome!</h1>\\n</div>\\n\\n\\n\\n<div class=\"quarto-title-meta\">\\n\\n    \\n  \\n    \\n  </div>\\n  \\n\\n\\n</header>\\n\\n\\n<p>Hello and welcome to my website! My name is Michael Weylandt.</p>\\n<p>I am a (tenure-track) Assistant Professor in the <a href=\"https://zicklin.baruch.cuny.edu/faculty-research/academic-departments/information-technology-statistics/\">Paul H. Chook Department of Information Systems and Statistics</a> in the <a href=\"https://zicklin.baruch.cuny.edu/\">Zicklin School of Business</a> at <a href=\"https://baruch.cuny.edu/\">Baruch College</a>, <a href=\"https://cuny.edu\">City University of New York (CUNY)</a>. My research is in statistical machine learning, with particular recent interests in climate statistics, network data, and machine learning fairness. Before joining Baruch, I was a Postdoctoral Appointee in the Statistical Sciences group at Sandia National Laboratories, working with <a href=\"https://research.tetonedge.net/\">J. Derek Tucker</a> and <a href=\"https://www.sandia.gov/ccr/staff/laura-painton-swiler/\">Laura P. Swiler</a>, and before that I was an US Intelligence Community Postdoctoral Research Fellow hosted at the University of Florida Informatics Institute, where I was advised by <a href=\"https://georgemichailidis.github.io/\">George Michailidis</a> as well as two mentors from the Intelligence Community. I earned my Ph.D.&nbsp;in Statistics at Rice University in 2020 under the supervision of <a href=\"https://ensor.rice.edu/\">Kathy Ensor</a>, worked in finance from 2013 to 2015, and taught at Sherborne School in the UK from 2012 to 2013.</p>\\n<p>For a more formal bio, please see my <a href=\"assets/Weylandt_CV.pdf\">CV</a> and my <a href=\"about.html\">About</a> page. More detail on my <a href=\"publications.html\">Publications</a> and <a href=\"software.html\">Software</a> can be found on those pages.</p>\\n\\n\\n\\n</main> <!-- /main -->\\n<script id=\"quarto-html-after-body\" type=\"application/javascript\">\\nwindow.document.addEventListener(\"DOMContentLoaded\", function (event) {\\n  const toggleBodyColorMode = (bsSheetEl) => {\\n    const mode = bsSheetEl.getAttribute(\"data-mode\");\\n    const bodyEl = window.document.querySelector(\"body\");\\n    if (mode === \"dark\") {\\n      bodyEl.classList.add(\"quarto-dark\");\\n      bodyEl.classList.remove(\"quarto-light\");\\n    } else {\\n      bodyEl.classList.add(\"quarto-light\");\\n      bodyEl.classList.remove(\"quarto-dark\");\\n    }\\n  }\\n  const toggleBodyColorPrimary = () => {\\n    const bsSheetEl = window.document.querySelector(\"link#quarto-bootstrap\");\\n    if (bsSheetEl) {\\n      toggleBodyColorMode(bsSheetEl);\\n    }\\n  }\\n  toggleBodyColorPrimary();  \\n  const icon = \"\\ue9cb\";\\n  const anchorJS = new window.AnchorJS();\\n  anchorJS.options = {\\n    placement: \\'right\\',\\n    icon: icon\\n  };\\n  anchorJS.add(\\'.anchored\\');\\n  const isCodeAnnotation = (el) => {\\n    for (const clz of el.classList) {\\n      if (clz.startsWith(\\'code-annotation-\\')) {                     \\n        return true;\\n      }\\n    }\\n    return false;\\n  }\\n  const onCopySuccess = function(e) {\\n    // button target\\n    const button = e.trigger;\\n    // don\\'t keep focus\\n    button.blur();\\n    // flash \"checked\"\\n    button.classList.add(\\'code-copy-button-checked\\');\\n    var currentTitle = button.getAttribute(\"title\");\\n    button.setAttribute(\"title\", \"Copied!\");\\n    let tooltip;\\n    if (window.bootstrap) {\\n      button.setAttribute(\"data-bs-toggle\", \"tooltip\");\\n      button.setAttribute(\"data-bs-placement\", \"left\");\\n      button.setAttribute(\"data-bs-title\", \"Copied!\");\\n      tooltip = new bootstrap.Tooltip(button, \\n        { trigger: \"manual\", \\n          customClass: \"code-copy-button-tooltip\",\\n          offset: [0, -8]});\\n      tooltip.show();    \\n    }\\n    setTimeout(function() {\\n      if (tooltip) {\\n        tooltip.hide();\\n        button.removeAttribute(\"data-bs-title\");\\n        button.removeAttribute(\"data-bs-toggle\");\\n        button.removeAttribute(\"data-bs-placement\");\\n      }\\n      button.setAttribute(\"title\", currentTitle);\\n      button.classList.remove(\\'code-copy-button-checked\\');\\n    }, 1000);\\n    // clear code selection\\n    e.clearSelection();\\n  }\\n  const getTextToCopy = function(trigger) {\\n      const codeEl = trigger.previousElementSibling.cloneNode(true);\\n      for (const childEl of codeEl.children) {\\n        if (isCodeAnnotation(childEl)) {\\n          childEl.remove();\\n        }\\n      }\\n      return codeEl.innerText;\\n  }\\n  const clipboard = new window.ClipboardJS(\\'.code-copy-button:not([data-in-quarto-modal])\\', {\\n    text: getTextToCopy\\n  });\\n  clipboard.on(\\'success\\', onCopySuccess);\\n  if (window.document.getElementById(\\'quarto-embedded-source-code-modal\\')) {\\n    const clipboardModal = new window.ClipboardJS(\\'.code-copy-button[data-in-quarto-modal]\\', {\\n      text: getTextToCopy,\\n      container: window.document.getElementById(\\'quarto-embedded-source-code-modal\\')\\n    });\\n    clipboardModal.on(\\'success\\', onCopySuccess);\\n  }\\n    var localhostRegex = new RegExp(/^(?:http|https):\\\\/\\\\/localhost\\\\:?[0-9]*\\\\//);\\n    var mailtoRegex = new RegExp(/^mailto:/);\\n      var filterRegex = new RegExp(\"https:\\\\/\\\\/michael-weylandt\\\\.com\\\\/\");\\n    var isInternal = (href) => {\\n        return filterRegex.test(href) || localhostRegex.test(href) || mailtoRegex.test(href);\\n    }\\n    // Inspect non-navigation links and adorn them if external\\n \\tvar links = window.document.querySelectorAll(\\'a[href]:not(.nav-link):not(.navbar-brand):not(.toc-action):not(.sidebar-link):not(.sidebar-item-toggle):not(.pagination-link):not(.no-external):not([aria-hidden]):not(.dropdown-item):not(.quarto-navigation-tool):not(.about-link)\\');\\n    for (var i=0; i<links.length; i++) {\\n      const link = links[i];\\n      if (!isInternal(link.href)) {\\n        // undo the damage that might have been done by quarto-nav.js in the case of\\n        // links that we want to consider external\\n        if (link.dataset.originalHref !== undefined) {\\n          link.href = link.dataset.originalHref;\\n        }\\n      }\\n    }\\n  function tippyHover(el, contentFn, onTriggerFn, onUntriggerFn) {\\n    const config = {\\n      allowHTML: true,\\n      maxWidth: 500,\\n      delay: 100,\\n      arrow: false,\\n      appendTo: function(el) {\\n          return el.parentElement;\\n      },\\n      interactive: true,\\n      interactiveBorder: 10,\\n      theme: \\'quarto\\',\\n      placement: \\'bottom-start\\',\\n    };\\n    if (contentFn) {\\n      config.content = contentFn;\\n    }\\n    if (onTriggerFn) {\\n      config.onTrigger = onTriggerFn;\\n    }\\n    if (onUntriggerFn) {\\n      config.onUntrigger = onUntriggerFn;\\n    }\\n    window.tippy(el, config); \\n  }\\n  const noterefs = window.document.querySelectorAll(\\'a[role=\"doc-noteref\"]\\');\\n  for (var i=0; i<noterefs.length; i++) {\\n    const ref = noterefs[i];\\n    tippyHover(ref, function() {\\n      // use id or data attribute instead here\\n      let href = ref.getAttribute(\\'data-footnote-href\\') || ref.getAttribute(\\'href\\');\\n      try { href = new URL(href).hash; } catch {}\\n      const id = href.replace(/^#\\\\/?/, \"\");\\n      const note = window.document.getElementById(id);\\n      if (note) {\\n        return note.innerHTML;\\n      } else {\\n        return \"\";\\n      }\\n    });\\n  }\\n  const xrefs = window.document.querySelectorAll(\\'a.quarto-xref\\');\\n  const processXRef = (id, note) => {\\n    // Strip column container classes\\n    const stripColumnClz = (el) => {\\n      el.classList.remove(\"page-full\", \"page-columns\");\\n      if (el.children) {\\n        for (const child of el.children) {\\n          stripColumnClz(child);\\n        }\\n      }\\n    }\\n    stripColumnClz(note)\\n    if (id === null || id.startsWith(\\'sec-\\')) {\\n      // Special case sections, only their first couple elements\\n      const container = document.createElement(\"div\");\\n      if (note.children && note.children.length > 2) {\\n        container.appendChild(note.children[0].cloneNode(true));\\n        for (let i = 1; i < note.children.length; i++) {\\n          const child = note.children[i];\\n          if (child.tagName === \"P\" && child.innerText === \"\") {\\n            continue;\\n          } else {\\n            container.appendChild(child.cloneNode(true));\\n            break;\\n          }\\n        }\\n        if (window.Quarto?.typesetMath) {\\n          window.Quarto.typesetMath(container);\\n        }\\n        return container.innerHTML\\n      } else {\\n        if (window.Quarto?.typesetMath) {\\n          window.Quarto.typesetMath(note);\\n        }\\n        return note.innerHTML;\\n      }\\n    } else {\\n      // Remove any anchor links if they are present\\n      const anchorLink = note.querySelector(\\'a.anchorjs-link\\');\\n      if (anchorLink) {\\n        anchorLink.remove();\\n      }\\n      if (window.Quarto?.typesetMath) {\\n        window.Quarto.typesetMath(note);\\n      }\\n      if (note.classList.contains(\"callout\")) {\\n        return note.outerHTML;\\n      } else {\\n        return note.innerHTML;\\n      }\\n    }\\n  }\\n  for (var i=0; i<xrefs.length; i++) {\\n    const xref = xrefs[i];\\n    tippyHover(xref, undefined, function(instance) {\\n      instance.disable();\\n      let url = xref.getAttribute(\\'href\\');\\n      let hash = undefined; \\n      if (url.startsWith(\\'#\\')) {\\n        hash = url;\\n      } else {\\n        try { hash = new URL(url).hash; } catch {}\\n      }\\n      if (hash) {\\n        const id = hash.replace(/^#\\\\/?/, \"\");\\n        const note = window.document.getElementById(id);\\n        if (note !== null) {\\n          try {\\n            const html = processXRef(id, note.cloneNode(true));\\n            instance.setContent(html);\\n          } finally {\\n            instance.enable();\\n            instance.show();\\n          }\\n        } else {\\n          // See if we can fetch this\\n          fetch(url.split(\\'#\\')[0])\\n          .then(res => res.text())\\n          .then(html => {\\n            const parser = new DOMParser();\\n            const htmlDoc = parser.parseFromString(html, \"text/html\");\\n            const note = htmlDoc.getElementById(id);\\n            if (note !== null) {\\n              const html = processXRef(id, note);\\n              instance.setContent(html);\\n            } \\n          }).finally(() => {\\n            instance.enable();\\n            instance.show();\\n          });\\n        }\\n      } else {\\n        // See if we can fetch a full url (with no hash to target)\\n        // This is a special case and we should probably do some content thinning / targeting\\n        fetch(url)\\n        .then(res => res.text())\\n        .then(html => {\\n          const parser = new DOMParser();\\n          const htmlDoc = parser.parseFromString(html, \"text/html\");\\n          const note = htmlDoc.querySelector(\\'main.content\\');\\n          if (note !== null) {\\n            // This should only happen for chapter cross references\\n            // (since there is no id in the URL)\\n            // remove the first header\\n            if (note.children.length > 0 && note.children[0].tagName === \"HEADER\") {\\n              note.children[0].remove();\\n            }\\n            const html = processXRef(null, note);\\n            instance.setContent(html);\\n          } \\n        }).finally(() => {\\n          instance.enable();\\n          instance.show();\\n        });\\n      }\\n    }, function(instance) {\\n    });\\n  }\\n      let selectedAnnoteEl;\\n      const selectorForAnnotation = ( cell, annotation) => {\\n        let cellAttr = \\'data-code-cell=\"\\' + cell + \\'\"\\';\\n        let lineAttr = \\'data-code-annotation=\"\\' +  annotation + \\'\"\\';\\n        const selector = \\'span[\\' + cellAttr + \\'][\\' + lineAttr + \\']\\';\\n        return selector;\\n      }\\n      const selectCodeLines = (annoteEl) => {\\n        const doc = window.document;\\n        const targetCell = annoteEl.getAttribute(\"data-target-cell\");\\n        const targetAnnotation = annoteEl.getAttribute(\"data-target-annotation\");\\n        const annoteSpan = window.document.querySelector(selectorForAnnotation(targetCell, targetAnnotation));\\n        const lines = annoteSpan.getAttribute(\"data-code-lines\").split(\",\");\\n        const lineIds = lines.map((line) => {\\n          return targetCell + \"-\" + line;\\n        })\\n        let top = null;\\n        let height = null;\\n        let parent = null;\\n        if (lineIds.length > 0) {\\n            //compute the position of the single el (top and bottom and make a div)\\n            const el = window.document.getElementById(lineIds[0]);\\n            top = el.offsetTop;\\n            height = el.offsetHeight;\\n            parent = el.parentElement.parentElement;\\n          if (lineIds.length > 1) {\\n            const lastEl = window.document.getElementById(lineIds[lineIds.length - 1]);\\n            const bottom = lastEl.offsetTop + lastEl.offsetHeight;\\n            height = bottom - top;\\n          }\\n          if (top !== null && height !== null && parent !== null) {\\n            // cook up a div (if necessary) and position it \\n            let div = window.document.getElementById(\"code-annotation-line-highlight\");\\n            if (div === null) {\\n              div = window.document.createElement(\"div\");\\n              div.setAttribute(\"id\", \"code-annotation-line-highlight\");\\n              div.style.position = \\'absolute\\';\\n              parent.appendChild(div);\\n            }\\n            div.style.top = top - 2 + \"px\";\\n            div.style.height = height + 4 + \"px\";\\n            div.style.left = 0;\\n            let gutterDiv = window.document.getElementById(\"code-annotation-line-highlight-gutter\");\\n            if (gutterDiv === null) {\\n              gutterDiv = window.document.createElement(\"div\");\\n              gutterDiv.setAttribute(\"id\", \"code-annotation-line-highlight-gutter\");\\n              gutterDiv.style.position = \\'absolute\\';\\n              const codeCell = window.document.getElementById(targetCell);\\n              const gutter = codeCell.querySelector(\\'.code-annotation-gutter\\');\\n              gutter.appendChild(gutterDiv);\\n            }\\n            gutterDiv.style.top = top - 2 + \"px\";\\n            gutterDiv.style.height = height + 4 + \"px\";\\n          }\\n          selectedAnnoteEl = annoteEl;\\n        }\\n      };\\n      const unselectCodeLines = () => {\\n        const elementsIds = [\"code-annotation-line-highlight\", \"code-annotation-line-highlight-gutter\"];\\n        elementsIds.forEach((elId) => {\\n          const div = window.document.getElementById(elId);\\n          if (div) {\\n            div.remove();\\n          }\\n        });\\n        selectedAnnoteEl = undefined;\\n      };\\n        // Handle positioning of the toggle\\n    window.addEventListener(\\n      \"resize\",\\n      throttle(() => {\\n        elRect = undefined;\\n        if (selectedAnnoteEl) {\\n          selectCodeLines(selectedAnnoteEl);\\n        }\\n      }, 10)\\n    );\\n    function throttle(fn, ms) {\\n    let throttle = false;\\n    let timer;\\n      return (...args) => {\\n        if(!throttle) { // first call gets through\\n            fn.apply(this, args);\\n            throttle = true;\\n        } else { // all the others get throttled\\n            if(timer) clearTimeout(timer); // cancel #2\\n            timer = setTimeout(() => {\\n              fn.apply(this, args);\\n              timer = throttle = false;\\n            }, ms);\\n        }\\n      };\\n    }\\n      // Attach click handler to the DT\\n      const annoteDls = window.document.querySelectorAll(\\'dt[data-target-cell]\\');\\n      for (const annoteDlNode of annoteDls) {\\n        annoteDlNode.addEventListener(\\'click\\', (event) => {\\n          const clickedEl = event.target;\\n          if (clickedEl !== selectedAnnoteEl) {\\n            unselectCodeLines();\\n            const activeEl = window.document.querySelector(\\'dt[data-target-cell].code-annotation-active\\');\\n            if (activeEl) {\\n              activeEl.classList.remove(\\'code-annotation-active\\');\\n            }\\n            selectCodeLines(clickedEl);\\n            clickedEl.classList.add(\\'code-annotation-active\\');\\n          } else {\\n            // Unselect the line\\n            unselectCodeLines();\\n            clickedEl.classList.remove(\\'code-annotation-active\\');\\n          }\\n        });\\n      }\\n  const findCites = (el) => {\\n    const parentEl = el.parentElement;\\n    if (parentEl) {\\n      const cites = parentEl.dataset.cites;\\n      if (cites) {\\n        return {\\n          el,\\n          cites: cites.split(\\' \\')\\n        };\\n      } else {\\n        return findCites(el.parentElement)\\n      }\\n    } else {\\n      return undefined;\\n    }\\n  };\\n  var bibliorefs = window.document.querySelectorAll(\\'a[role=\"doc-biblioref\"]\\');\\n  for (var i=0; i<bibliorefs.length; i++) {\\n    const ref = bibliorefs[i];\\n    const citeInfo = findCites(ref);\\n    if (citeInfo) {\\n      tippyHover(citeInfo.el, function() {\\n        var popup = window.document.createElement(\\'div\\');\\n        citeInfo.cites.forEach(function(cite) {\\n          var citeDiv = window.document.createElement(\\'div\\');\\n          citeDiv.classList.add(\\'hanging-indent\\');\\n          citeDiv.classList.add(\\'csl-entry\\');\\n          var biblioDiv = window.document.getElementById(\\'ref-\\' + cite);\\n          if (biblioDiv) {\\n            citeDiv.innerHTML = biblioDiv.innerHTML;\\n          }\\n          popup.appendChild(citeDiv);\\n        });\\n        return popup.innerHTML;\\n      });\\n    }\\n  }\\n});\\n</script>\\n</div> <!-- /content -->\\n\\n\\n\\n\\n<footer class=\"footer\"><div class=\"nav-footer\"><div class=\"nav-footer-center\"><div class=\"toc-actions\"><ul><li><a href=\"https://github.com/michaelweylandt/michaelweylandt.github.io/edit/main/index.qmd\" class=\"toc-action\"><i class=\"bi bi-github\"></i>Edit this page</a></li><li><a href=\"https://github.com/michaelweylandt/michaelweylandt.github.io/blob/main/index.qmd\" class=\"toc-action\"><i class=\"bi empty\"></i>View source</a></li><li><a href=\"https://github.com/michaelweylandt/michaelweylandt.github.io/issues/new\" class=\"toc-action\"><i class=\"bi empty\"></i>Report an issue</a></li></ul></div></div></div></footer></body></html>'\n```\n:::\n:::\n\n\n## Looking Ahead\n\nNext, we will look at HTML, the most content type of HTTP response\n\n## Learning More\n\nThe [MDN docs](https://developer.mozilla.org/en-US/docs/Web/HTTP) describe HTTP in detail and are pretty readable\n\n. . . \n\nThe [`requests` docs](https://docs.python-requests.org/en/latest/index.html) are quite readable as well\n\n- [Quickstart](https://docs.python-requests.org/en/latest/user/quickstart/)\n\n",
    "supporting": [
      "16_http_files"
    ],
    "filters": [],
    "includes": {}
  }
}